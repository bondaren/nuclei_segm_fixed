model_path: '/g/kreshuk/wolny/workspace/vlad-nuclei/experiments/3dunet_bce_f16_ab_train_16122019/best_checkpoint.pytorch'
# model configuration
model:
  name: UNet3D
  # number of input channels to the model
  in_channels: 1
  # number of output channels
  out_channels: 1
  # determines the order of operators in a single layer (crg - Conv3d+ReLU+GroupNorm)
  layer_order: gcr
  # initial number of feature maps
  f_maps: 16
  # number of groups in the groupnorm
  num_groups: 8
  # apply element-wise nn.Sigmoid after the final 1x1x1 convolution, otherwise apply nn.Softmax
  final_sigmoid: true
# specify the test datasets
datasets:
  mirror_padding: true
  # patch size given to the network (adapt to fit in your GPU mem)
  patch: [100, 200, 200]
  # stride between patches (make sure the the patches overlap in order to get smoother prediction maps)
  stride: [50, 100, 100]
  # path to the raw data within the H5
  raw_internal_path: raw
  # paths to the datasets
  test_path:
    - '/g/kreshuk/wolny/Datasets/Vladyslav/GT/test/without_aff/GT_Ab1_test.h5'
    - '/g/kreshuk/wolny/Datasets/Vladyslav/GT/test/without_aff/GT_Ab2_test.h5'
  transformer:
    test:
      raw:
        - name: Standardize
        - name: ToTensor
          expand_dims: true
